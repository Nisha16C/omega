!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).alovaFetch=t()}(this,(function(){"use strict";const e="undefined",t=Object;typeof window===e&&typeof process!==e&&process.cwd;const o=e=>{const o=(n=e,t.prototype.toString.call(n));var n;return/^\[object (Blob|FormData|ReadableStream|URLSearchParams)\]$/i.test(o)||((e,t)=>e instanceof t)(e,ArrayBuffer)},n="undefined",r=Promise,a=Object,s=!0,c=!1,i=e=>clearTimeout(e);typeof window===n&&typeof process!==n&&process.cwd;const d=e=>"string"===(e=>typeof e)(e)||o(e);return function(){return(e,t)=>{const o=t.config,n=o.timeout||0,f=new AbortController,{data:l,headers:p}=e,u=/content-type/i.test(a.keys(p).join()),h=l&&"[object FormData]"===l.toString();u||h||(p["Content-Type"]="application/json;charset=UTF-8");const y=fetch(e.url,{...o,method:e.type,signal:f.signal,body:d(l)?l:(g=l,JSON.stringify(g,b,m))});var g,b,m;let w,j=c;return n>0&&(w=((e,t=0)=>setTimeout(e,t))((()=>{j=s,f.abort()}),n)),{response:()=>y.then((e=>(i(w),e.clone())),(e=>(e=>r.reject(e))(j?((e,...t)=>new e(...t))(Error,"fetchError: network timeout"):e))),headers:()=>y.then((({headers:e})=>e),(()=>({}))),onDownload:async e=>{let t=c;const o=await y.catch((()=>{t=s}));if(!o)return;const{headers:n,body:r}=o.clone(),a=r?r.getReader():undefined,i=Number(n.get("Content-Length")||n.get("content-length")||0);if(i<=0)return;let d=0;if(a){const o=()=>a.read().then((({done:n,value:r=new Uint8Array})=>{if(!n&&!t)return d+=r.byteLength,e(i,d),o();t&&e(i,0)}));o()}},onUpload(){console.error("fetch API does'nt support uploading progress. please consider to change `@alova/adapter-xhr` or `@alova/adapter-axios`")},abort:()=>{f.abort(),i(w)}}}}}));
