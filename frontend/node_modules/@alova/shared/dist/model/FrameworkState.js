/**
  * @alova/shared 1.0.5 (undefined)
  * Document undefined
  * Copyright 2024 Scott Hu. All Rights Reserved
  * Licensed under MIT (https://httpshub.com/alovajs/alova/blob/main/LICENSE)
*/

class FrameworkReadableState {
    constructor(state, key, dehydrate, exportState) {
        this.s = state;
        this.k = key;
        this.$dhy = dehydrate;
        this.$exp = exportState;
    }
    get v() {
        return this.$dhy(this.s);
    }
    get e() {
        return this.$exp(this.s);
    }
}
class FrameworkState extends FrameworkReadableState {
    constructor(state, key, dehydrate, exportState, update) {
        super(state, key, dehydrate, exportState);
        this.$upd = update;
    }
    set v(newValue) {
        this.$upd(this.s, newValue);
    }
    get v() {
        return super.v;
    }
}

export { FrameworkReadableState, FrameworkState };
