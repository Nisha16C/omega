/**
  * @alova/shared 1.0.5 (undefined)
  * Document undefined
  * Copyright 2024 Scott Hu. All Rights Reserved
  * Licensed under MIT (https://httpshub.com/alovajs/alova/blob/main/LICENSE)
*/

'use strict';

class AlovaEventBase {
    constructor(method, args) {
        this.method = method;
        this.args = args;
    }
    clone() {
        return { ...this };
    }
    static spawn(method, args) {
        return new AlovaEventBase(method, args);
    }
}
class AlovaSuccessEvent extends AlovaEventBase {
    constructor(base, data, fromCache) {
        super(base.method, base.args);
        this.data = data;
        this.fromCache = fromCache;
    }
}
class AlovaErrorEvent extends AlovaEventBase {
    constructor(base, error) {
        super(base.method, base.args);
        this.error = error;
    }
}
class AlovaCompleteEvent extends AlovaEventBase {
    constructor(base, status, data, fromCache, error) {
        super(base.method, base.args);
        this.status = status;
        this.data = data;
        this.fromCache = status === 'error' ? false : fromCache;
        this.error = error;
    }
}

exports.AlovaCompleteEvent = AlovaCompleteEvent;
exports.AlovaErrorEvent = AlovaErrorEvent;
exports.AlovaEventBase = AlovaEventBase;
exports.AlovaSuccessEvent = AlovaSuccessEvent;
